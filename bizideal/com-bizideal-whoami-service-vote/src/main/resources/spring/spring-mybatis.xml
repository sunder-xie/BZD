<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<!--配置连接池开始 -->
		<!--配置数据库连接池 -->
		<!-- 配置数据源 使用的是Druid数据源 -->
		<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<!-- 基本属性 url、user、password -->
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="0" />
			<property name="minIdle" value="0" />
			<property name="maxActive" value="20" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<!-- 用来检测有效sql -->
			<property name="validationQuery" value="${validationQuery}" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<property name="testWhileIdle" value="true" />

			<!-- 打开removeAbandoned功能 -->
			<property name="removeAbandoned" value="true" />
			<!-- 1800秒，也就是30分钟 -->
			<property name="removeAbandonedTimeout" value="1800" />
			<!-- 关闭abanded连接时输出错误日志 -->
			<property name="logAbandoned" value="true" />

			<!-- 配置监控数据库统计拦截的filters，去掉后监控界面sql无法统计 -->
			<property name="filters" value="mergeStat" />
		</bean>

		<!--配置连接池结束 -->
	
	
	
	<!--  mybatis 的 SqlSession 的工厂: SqlSessionFactoryBean 
			dataSource: 引用数据源
			typeAliasesPackage：简洁mybatis调用实体类名只需要输入类名就可以不需要输入全类名
			mapperLocations：加载mybatis配置
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 指定mybatis的全局配置文件 -->
		
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.bizideal.whoami.vote.entity" />
	    <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property> 
	</bean>
	
		<!-- 配置扫描器 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bizideal.whoami.mapper" />
		<property name="markerInterface" value="tk.mybatis.mapper.common.Mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

		<property name="properties">
        <value>
            mappers=tk.mybatis.mapper.common.Mapper
            IDENTITY=MYSQL  
            notEmpty=false  
        </value>
    </property>
	</bean>
<!-- 声名式事物配置开始 -->
	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 事务的通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 配置那些方法使用什么样的事务 ，配置事务的传播特性 -->
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置AOP -->
	<aop:config>
		<aop:pointcut expression="execution(* com.bizideal.whoami.service.*.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<!-- 声名式事物配置结束 -->
</beans>